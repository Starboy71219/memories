{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nexport const getPost = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPost(id);\n    dispatch({\n      type: FETCH_POST,\n      payload: {\n        post: data\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPosts = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts();\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: {\n        data\n      }\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n  try {\n    const {\n      data\n    } = await api.likePost(id, user === null || user === void 0 ? void 0 : user.token);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","api","getPost","id","dispatch","type","START_LOADING","data","fetchPost","FETCH_POST","payload","post","error","console","log","getPosts","fetchPosts","getPostsBySearch","searchQuery","fetchPostsBySearch","FETCH_BY_SEARCH","END_LOADING","createPost","updatePost","likePost","user","JSON","parse","localStorage","getItem","token","deletePost"],"sources":["/Users/riteshkumar/Desktop/proj/client/src/actions/posts.js"],"sourcesContent":["import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const { data } = await api.fetchPost(id);\n\n    dispatch({ type: FETCH_POST, payload: { post: data } });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const { data } = await api.fetchPosts();\n\n    dispatch({ type: FETCH_ALL, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\n\n    dispatch({ type: FETCH_BY_SEARCH, payload: { data } });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createPost = (post) => async (dispatch) => {\n  try {\n    const { data } = await api.createPost(post);\n\n    dispatch({ type: CREATE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    const { data } = await api.updatePost(id, post);\n\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const likePost = (id) => async (dispatch) => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  try {\n    const { data } = await api.likePost(id, user?.token);\n\n    dispatch({ type: LIKE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await await api.deletePost(id);\n\n    dispatch({ type: DELETE, payload: id });\n  } catch (error) {\n    console.log(error);\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}