{"ast":null,"code":"var _jsxFileName = \"/Users/riteshkumar/Desktop/proj/client/src/components/Form/Form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport { useHistory } from 'react-router-dom';\n// import ChipInput from 'material-ui-chip-input';\n\nimport { createPost, updatePost } from '../../actions/posts';\nimport useStyles from './styles';\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  var _user$result3;\n  const [postData, setPostData] = useState({\n    title: '',\n    message: '',\n    tags: [],\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.posts.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const history = useHistory();\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      title: '',\n      message: '',\n      tags: [],\n      selectedFile: ''\n    });\n  };\n  useEffect(() => {\n    if (!(post === null || post === void 0 ? void 0 : post.title)) clear();\n    if (post) setPostData(post);\n  }, [post]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (currentId === 0) {\n      var _user$result;\n      dispatch(createPost({\n        ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      }, history));\n      clear();\n    } else {\n      var _user$result2;\n      dispatch(updatePost(currentId, {\n        ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }));\n      clear();\n    }\n  };\n  if (!(user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3.name)) {\n    return /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      elevation: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, \"Please Sign In to create your own memories and like other's memories.\"));\n  }\n\n  // const handleAddChip = (tag) => {\n  //   setPostData({ ...postData, tags: [...postData.tags, tag] });\n  // };\n\n  // const handleDeleteChip = (chipToDelete) => {\n  //   setPostData({ ...postData, tags: postData.tags.filter((tag) => tag !== chipToDelete) });\n  // };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Title\",\n    fullWidth: true,\n    value: postData.title,\n    onChange: e => setPostData({\n      ...postData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    variant: \"outlined\",\n    label: \"Message\",\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    value: postData.message,\n    onChange: e => setPostData({\n      ...postData,\n      message: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"tags\",\n    variant: \"outlined\",\n    label: \"Tags (coma separated)\",\n    fullWidth: true,\n    value: postData.tags,\n    onChange: e => setPostData({\n      ...postData,\n      tags: e.target.value.split(',')\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: ({\n      base64\n    }) => setPostData({\n      ...postData,\n      selectedFile: base64\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Clear\")));\n};\nexport default Form;","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useDispatch","useSelector","FileBase","useHistory","createPost","updatePost","useStyles","Form","currentId","setCurrentId","_user$result3","postData","setPostData","title","message","tags","selectedFile","post","state","posts","find","_id","dispatch","classes","user","JSON","parse","localStorage","getItem","history","clear","handleSubmit","e","preventDefault","_user$result","name","result","_user$result2","createElement","className","paper","elevation","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","variant","align","autoComplete","noValidate","root","form","onSubmit","label","fullWidth","value","onChange","target","multiline","rows","split","fileInput","type","multiple","onDone","base64","buttonSubmit","color","size","onClick"],"sources":["/Users/riteshkumar/Desktop/proj/client/src/components/Form/Form.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport { useHistory } from 'react-router-dom';\n// import ChipInput from 'material-ui-chip-input';\n\nimport { createPost, updatePost } from '../../actions/posts';\nimport useStyles from './styles';\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({ title: '', message: '', tags: [], selectedFile: '' });\n  const post = useSelector((state) => (currentId ? state.posts.posts.find((message) => message._id === currentId) : null));\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const history = useHistory();\n\n  const clear= () => {\n    setCurrentId(0);\n    setPostData({ title: '', message: '', tags: [], selectedFile: '' });\n  };\n\n  useEffect(() => {\n    if (!post?.title) clear();\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPost({ ...postData, name: user?.result?.name }, history));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }));\n      clear();\n    }\n  };\n\n  if (!user?.result?.name) {\n    return (\n      <Paper className={classes.paper} elevation={6}>\n        <Typography variant=\"h6\" align=\"center\">\n          Please Sign In to create your own memories and like other's memories.\n        </Typography>\n      </Paper>\n    );\n  }\n\n  // const handleAddChip = (tag) => {\n  //   setPostData({ ...postData, tags: [...postData.tags, tag] });\n  // };\n\n  // const handleDeleteChip = (chipToDelete) => {\n  //   setPostData({ ...postData, tags: postData.tags.filter((tag) => tag !== chipToDelete) });\n  // };\n\n  return (\n    <Paper className={classes.paper}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'}</Typography>\n        <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n        <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n        <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\n        <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module"}